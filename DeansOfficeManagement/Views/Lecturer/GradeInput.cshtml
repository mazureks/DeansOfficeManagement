@model DeansOfficeManagement.Models.ViewModels.GradeInputViewModel

@{
    ViewBag.Title = "Wprowadzanie ocen z " + Model.CourseName;
}

<h2>Wprowadzanie ocen : @Model.CourseName  [%]</h2>

@if (TempData["SuccessMessage"] != null)

{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<form asp-action="SaveGrades" method="post">
    <input type="hidden" asp-for="CourseId" />
    <input type="hidden" asp-for="CourseName" /> <!-- Ukryte pole dla nazwy kursu -->

    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Imię i nazwisko studenta</th>
                    <th>Ocena</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Students.Count; i++)

                {
                    <tr>
                        <td>
                            @Model.Students[i].StudentName
                            <input type="hidden" name="Students[@i].StudentName" value="@Model.Students[i].StudentName" />
                        </td>
                        <td>
                            <input type="hidden" name="Students[@i].StudentId" value="@Model.Students[i].StudentId" />
                            <input name="Students[@i].Grade" class="form-control" type="number" min="0" max="100" step="0.1" value="@Model.Students[i].Grade" />
                            <span asp-validation-for="Students[@i].Grade" class="text-danger"></span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <button type="submit" class="btn btn-primary">Zapisz oceny</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}